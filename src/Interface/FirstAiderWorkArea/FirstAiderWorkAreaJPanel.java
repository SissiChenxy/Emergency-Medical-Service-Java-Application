/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.FirstAiderWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SOSRequest;
import Business.WorkQueue.WorkRequest;
import Util.LocationService;
import Util.MapJPanel;
import Util.NavJPanel;
import Util.MapService;
import java.awt.CardLayout;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenxinyun
 */
public class FirstAiderWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FirstAiderWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem business;

    public FirstAiderWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        populatePatientInfo();
    }

    public void populatePatientInfo() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        ArrayList<SOSRequest> requests = new ArrayList<>();
        for (WorkRequest sosRequest : business.getWorkQueue().getWorkRequestList()) {
            SOSRequest request = (SOSRequest) sosRequest;
            if (request.getAmbulanceService() != null) {
                for (UserAccount a : request.getAmbulanceService().getListOfAiders()) {
                    if (a.equals(account)) {
                        requests.add(request);
                    }
                }
            }
        }
        for (WorkRequest request : requests) {
            SOSRequest sosRequest = (SOSRequest) request;
            Object row[] = new Object[3];
            row[0] = sosRequest;
            row[1] = sosRequest.getRequestDate();
            row[2] = sosRequest.getStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        patientInfo = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        zipcodeTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        confirmPickUpButton = new javax.swing.JButton();
        startOffButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        showBtn = new javax.swing.JButton();
        shareLocBtn = new javax.swing.JButton();
        viewLocBtn = new javax.swing.JButton();
        therapy = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bodyPartTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        bodyApparatusTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        symptomTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        therapyTextArea = new javax.swing.JTextArea();
        finishServiceBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel6.setText("Street address:");

        streetTextField.setEnabled(false);

        jLabel7.setText("City:");

        cityTextField.setEnabled(false);

        jLabel8.setText("Zip code:");

        zipcodeTextField.setEnabled(false);

        jLabel9.setText("Phone:");

        phoneTextField.setEnabled(false);

        jLabel10.setText("Name:");

        nameTextField.setEnabled(false);

        confirmPickUpButton.setText("Confirm To Pick Up Patient");
        confirmPickUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPickUpButtonActionPerformed(evt);
            }
        });

        startOffButton.setText("Start Off");
        startOffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startOffButtonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Requester", "Request Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(table);

        showBtn.setText("Show");
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });

        shareLocBtn.setText("Navigation");
        shareLocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shareLocBtnActionPerformed(evt);
            }
        });

        viewLocBtn.setText("View Location");
        viewLocBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewLocBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout patientInfoLayout = new javax.swing.GroupLayout(patientInfo);
        patientInfo.setLayout(patientInfoLayout);
        patientInfoLayout.setHorizontalGroup(
            patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(patientInfoLayout.createSequentialGroup()
                            .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8))
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(zipcodeTextField)
                                .addComponent(streetTextField)
                                .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(patientInfoLayout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(81, 81, 81)
                            .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(158, 158, 158))
            .addGroup(patientInfoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(patientInfoLayout.createSequentialGroup()
                        .addComponent(viewLocBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shareLocBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startOffButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmPickUpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showBtn)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        patientInfoLayout.setVerticalGroup(
            patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientInfoLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showBtn)
                    .addComponent(startOffButton)
                    .addComponent(confirmPickUpButton)
                    .addComponent(shareLocBtn)
                    .addComponent(viewLocBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientInfoLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7))
                    .addGroup(patientInfoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientInfoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)))
                .addGap(18, 18, 18)
                .addGroup(patientInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(119, 119, 119))
        );

        jTabbedPane1.addTab("Patient Information", patientInfo);

        jLabel4.setText("Body Part:");

        jLabel5.setText("Treatment Methods：");

        bodyPartTextField.setEnabled(false);

        jLabel11.setText("Body Apparatus:");

        bodyApparatusTextField.setEnabled(false);

        jLabel12.setText("Symptom:");

        symptomTextField.setEnabled(false);

        therapyTextArea.setColumns(20);
        therapyTextArea.setRows(5);
        therapyTextArea.setEnabled(false);
        jScrollPane1.setViewportView(therapyTextArea);

        finishServiceBtn.setText("Finish Service");
        finishServiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishServiceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout therapyLayout = new javax.swing.GroupLayout(therapy);
        therapy.setLayout(therapyLayout);
        therapyLayout.setHorizontalGroup(
            therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(therapyLayout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(therapyLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bodyApparatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(therapyLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bodyPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(therapyLayout.createSequentialGroup()
                        .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(finishServiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                            .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(symptomTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jScrollPane1)))))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        therapyLayout.setVerticalGroup(
            therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(therapyLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bodyPartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(bodyApparatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(symptomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(therapyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(finishServiceBtn)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Therapy Methods", therapy);

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel13.setText("EMS Conducting Service");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startOffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startOffButtonActionPerformed
        // TODO add your handling code here:
        for (WorkRequest sosRequest : business.getWorkQueue().getWorkRequestList()) {
            SOSRequest request = (SOSRequest) sosRequest;
            if (request.getAmbulanceService() != null) {
                for (UserAccount a : request.getAmbulanceService().getListOfAiders()) {
                    if (a.equals(account)) {
                        request.setStatus("Ambulance Start Off");
                        request.getAmbulanceService().setStartoffDate(new Date());
                        JOptionPane.showMessageDialog(null, "The status has been updated successfully!");
                        populatePatientInfo();
                    }
                }
            }
        }
    }//GEN-LAST:event_startOffButtonActionPerformed

    private void confirmPickUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPickUpButtonActionPerformed
        // TODO add your handling code here:
        for (WorkRequest sosRequest : business.getWorkQueue().getWorkRequestList()) {
            SOSRequest request = (SOSRequest) sosRequest;
            if (request.getAmbulanceService() != null) {
                for (UserAccount a : request.getAmbulanceService().getListOfAiders()) {
                    if (a.equals(account)) {
                        request.setStatus("Forward to Hospital");
                        request.getAmbulanceService().setPickUpPatientDate(new Date());
                        JOptionPane.showMessageDialog(null, "The status has been updated successfully!");
                        populatePatientInfo();
                    }
                }
            }
        }
    }//GEN-LAST:event_confirmPickUpButtonActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            streetTextField.setText(request.getStreetAddress());
            zipcodeTextField.setText(String.valueOf(request.getZipcode()));
            cityTextField.setText(request.getCity());
            nameTextField.setText(request.getName());
            phoneTextField.setText(String.valueOf(request.getPhone()));
            bodyPartTextField.setText(request.getBodyPart());
            bodyApparatusTextField.setText(request.getBodyApparatus());
            symptomTextField.setText(request.getSymptom());
            if (request.getAmbulanceService().getTherapy() != null) {
                therapyTextArea.setText(request.getAmbulanceService().getTherapy().getFirstAidMethods());
            } else {
                therapyTextArea.setText("Aid method is being analyzed.");
            }
        }
    }//GEN-LAST:event_showBtnActionPerformed

    private void viewLocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewLocBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            // Currently hardcoding, will be make it when an gps device is attached.
            try {
                MapJPanel mapPanel = new MapJPanel(userProcessContainer, request.getStreetAddress());
                userProcessContainer.add("mapPanel", mapPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_viewLocBtnActionPerformed

    private void shareLocBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shareLocBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            // Currently hardcoding, will be make it when an gps device is attached.
            request.getAmbulanceService().setCurrentAddress(request.getAmbulanceService().getAmbulance().getAddress());
            try {
                NavJPanel mapPanel = new NavJPanel(userProcessContainer, request.getAmbulanceService().getAmbulance().getAddress(),
                        request.getStreetAddress());
                userProcessContainer.add("mapPanel", mapPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_shareLocBtnActionPerformed

    private void finishServiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishServiceBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            request.setStatus("Finish");
            request.setResolveDate(new Date());
        }
    }//GEN-LAST:event_finishServiceBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bodyApparatusTextField;
    private javax.swing.JTextField bodyPartTextField;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JButton confirmPickUpButton;
    private javax.swing.JButton finishServiceBtn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel patientInfo;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton shareLocBtn;
    private javax.swing.JButton showBtn;
    private javax.swing.JButton startOffButton;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JTextField symptomTextField;
    private javax.swing.JTable table;
    private javax.swing.JPanel therapy;
    private javax.swing.JTextArea therapyTextArea;
    private javax.swing.JButton viewLocBtn;
    private javax.swing.JTextField zipcodeTextField;
    // End of variables declaration//GEN-END:variables
}
