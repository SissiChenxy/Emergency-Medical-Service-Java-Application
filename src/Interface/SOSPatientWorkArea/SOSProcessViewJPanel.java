/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SOSPatientWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SOSRequest;
import Business.WorkQueue.WorkRequest;
import Util.MapJPanel;
import Util.SMSService;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenxinyun
 */
public class SOSProcessViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SOSProcessViewJPanel
     */
    private JPanel container;
    private EcoSystem system;
    private UserAccount userAccount;

    public SOSProcessViewJPanel(JPanel container, EcoSystem system, UserAccount userAccount) {
        initComponents();
        this.container = container;
        this.system = system;
        this.userAccount = userAccount;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        ambulanceNoTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        departureTimeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        arrivalTimeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hospitalTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        methodTextField = new javax.swing.JTextArea();
        dashboardBtn = new javax.swing.JButton();
        smsBtn = new javax.swing.JButton();
        locBtn = new javax.swing.JButton();

        jLabel2.setText("Ambulance No.:");

        ambulanceNoTextField.setEnabled(false);

        jLabel3.setText("Departure time:");

        departureTimeTextField.setEnabled(false);

        jLabel4.setText("Arrival time:");

        arrivalTimeTextField.setEnabled(false);

        jLabel5.setText("Hospital:");

        hospitalTextField.setEnabled(false);

        jLabel7.setText("Self-therapeutic Method:");

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel8.setText("EMS Conducting Service");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Requester", "Request Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(table);

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        methodTextField.setColumns(20);
        methodTextField.setRows(5);
        methodTextField.setLineWrap(true);
        methodTextField.setEnabled(false);
        jScrollPane2.setViewportView(methodTextField);

        dashboardBtn.setText("Go To My Dashboard -->");
        dashboardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardBtnActionPerformed(evt);
            }
        });

        smsBtn.setText("Send Status To My Phone");
        smsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsBtnActionPerformed(evt);
            }
        });

        locBtn.setText("View Ambulance Current Location");
        locBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(locBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(smsBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewBtn))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(116, 116, 116)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2)))
                                        .addComponent(backBtn))
                                    .addGap(43, 43, 43)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(hospitalTextField)
                                        .addComponent(arrivalTimeTextField)
                                        .addComponent(ambulanceNoTextField)
                                        .addComponent(departureTimeTextField)
                                        .addComponent(jScrollPane2)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(47, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dashboardBtn)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(dashboardBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn)
                    .addComponent(smsBtn)
                    .addComponent(locBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel7)
                        .addGap(32, 32, 32)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ambulanceNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departureTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(arrivalTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospitalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void populate() {
        ArrayList<WorkRequest> requests = new ArrayList<>();
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
            if (request.getSender().equals(userAccount)) {
                requests.add(request);
            }
        }

        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (WorkRequest request : requests) {
            SOSRequest sosRequest = (SOSRequest) request;
            Object row[] = new Object[3];
            row[0] = sosRequest;
            row[1] = sosRequest.getRequestDate();
            row[2] = sosRequest.getStatus();
            model.addRow(row);
        }
    }
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            if (request.getAmbulanceService() != null) {
                ambulanceNoTextField.setText(request.getAmbulanceService().getAmbulance().getName());
                if (request.getAmbulanceService().getTherapy() != null) {
                    methodTextField.setText(request.getAmbulanceService().getTherapy().getSelfcareMethods());
                }
            } else {
                ambulanceNoTextField.setText("Ambulance service is being conducted.");
                methodTextField.setText("Please wait, self treatment is being discussing by professions.");
            }
            SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
            if (request.getAmbulanceService() != null && request.getAmbulanceService().getStartoffDate() != null) {
                departureTimeTextField.setText(dt.format(request.getAmbulanceService().getStartoffDate()));
            } else {
                departureTimeTextField.setText("Not yet assigned.");
            }
            if (request.getResolveDate() != null) {
                arrivalTimeTextField.setText(dt.format(request.getResolveDate()));
            } else {
                arrivalTimeTextField.setText("Not yet assigned.");
            }
            if (request.getHospital() != null) {
                hospitalTextField.setText(request.getHospital().toString());
            } else {
                hospitalTextField.setText("Not yet assigned.");
            }

        }
    }//GEN-LAST:event_viewBtnActionPerformed

    private void dashboardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboardBtnActionPerformed

    private void smsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            SOSRequest sosRequest = (SOSRequest) request;
            SMSService.sendMessage("Hello, the current status for the EMS serivce is: "
                    + request.getStatus(), "+16173317256");
            JOptionPane.showMessageDialog(null, "Message has been sent to your phone.");
        }
    }//GEN-LAST:event_smsBtnActionPerformed

    private void locBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            SOSRequest request = (SOSRequest) model.getValueAt(selectedRow, 0);
            if (request.getAmbulanceService() == null) {
                JOptionPane.showMessageDialog(null, "Ambulance is not assigned");
                return;
            }
            try {
                if (request.getAmbulanceService().getCurrentAddress() == null) {
                    JOptionPane.showMessageDialog(null, "Address not provided.");
                    return;
                }
                MapJPanel mapPanel = new MapJPanel(container, request.getAmbulanceService().getCurrentAddress());
                container.add("mapPanel", mapPanel);
                CardLayout layout = (CardLayout) container.getLayout();
                layout.next(container);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_locBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ambulanceNoTextField;
    private javax.swing.JTextField arrivalTimeTextField;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton dashboardBtn;
    private javax.swing.JTextField departureTimeTextField;
    private javax.swing.JTextField hospitalTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton locBtn;
    private javax.swing.JTextArea methodTextField;
    private javax.swing.JButton smsBtn;
    private javax.swing.JTable table;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
