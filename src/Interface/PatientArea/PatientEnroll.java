/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.PatientArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.PatientOrganization;
import Business.Role.PatientRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author zhang
 */
public class PatientEnroll extends javax.swing.JPanel {
private int num = 0;
    /**
     * Creates new form PatientEnroll
     */

    private JPanel container;
    private EcoSystem system;
    public PatientEnroll(JPanel container, EcoSystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        populatehospital();
    }
    public void populatehospital(){
        jComboBox1.removeAllItems();
        for(Network network : system.getNetworkList()){
            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
               if(enterprise instanceof HospitalEnterprise){
                   jComboBox1.addItem(enterprise);
               }                
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        photo = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        zipcodeTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JTextField();
        userNameText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        checkjTable = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(800, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("choose a picture");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 281, -1, -1));

        photo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        photo.setText("Photo");
        add(photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 103, 131, 171));

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 71, -1));

        jLabel9.setText("Phone:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 341, -1, -1));
        add(phoneTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 338, 233, -1));

        jLabel6.setText("Street Address:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 245, -1, -1));
        add(streetTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 242, 233, -1));

        jLabel7.setText("City:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 307, -1, 21));
        add(cityTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 306, 233, -1));

        jLabel8.setText("Zip Code:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 277, -1, -1));
        add(zipcodeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 274, 233, -1));

        jLabel11.setText("Name:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 132, -1, -1));

        jLabel12.setText("UserName:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 161, -1, -1));

        jLabel13.setText("Password:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 213, -1, -1));
        add(nameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 126, 233, -1));
        add(passwordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 210, 233, -1));

        userNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userNameTextFocusLost(evt);
            }
        });
        add(userNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 158, 233, -1));

        jLabel1.setText("*");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, 10, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 86, 164, -1));

        checkjTable.setText("checking...");
        add(checkjTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 187, 230, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 57, 1340, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Patient Enroll");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 13, -1, -1));

        jToggleButton1.setText("Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 460, -1, -1));

        jLabel3.setText("Chose Hospital");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 89, -1, -1));

        jLabel4.setText("*");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 160, 10, 20));

        jLabel5.setText("*");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 130, 10, -1));

        jLabel10.setText("*");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 215, 10, -1));

        jLabel14.setText("Email:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 373, -1, -1));
        add(emailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 373, 233, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jFileChooser1.addChoosableFileFilter(new JAVAFileFilter("jpg"));//导入可选择的文件的后缀名类型
        jFileChooser1.addChoosableFileFilter(new JAVAFileFilter("png"));
        jFileChooser1.showDialog(new JLabel(), "选择");
         String str = jFileChooser1.getSelectedFile().getAbsolutePath();
         ImageIcon image =  new ImageIcon(str);
         image.setImage(image.getImage().getScaledInstance(131,171,Image.SCALE_DEFAULT));
         photo.setIcon(image);
         System.out.println("check:1");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String str = jFileChooser1.getSelectedFile().getAbsolutePath();
        String filename = jFileChooser1.getSelectedFile().getName();
        //System.out.println(filename);
        String newPath = "./picture/";
        String []suffix = filename.split("\\.");
       // System.out.println(suffix[0]);
       // System.out.println(suffix[1]);
        String newName = System.currentTimeMillis()+suffix[1];
        copyFolder(str,newPath,newName);
        String name = nameText.getText();
        String username = userNameText.getText();
        String password = passwordText.getText();
        String address = streetTextField.getText();
        String zipcode = zipcodeTextField.getText();
        String city = cityTextField.getText();
        String phone = phoneTextField.getText();
        String email = emailText.getText();
        HospitalEnterprise hospitalEnterprise = (HospitalEnterprise)jComboBox1.getSelectedItem();
        if(!name.isEmpty()&&!username.isEmpty()&&!phone.isEmpty()&&!password.isEmpty()){
            UserAccount account = new UserAccount();
            PatientRole patientRole = new PatientRole();
            
            account.setUsername(username);
            account.setPassword(password);
            account.setName(name);
            
            account.setPhoto(newPath+newName);
            
            patientRole.setCity(city);
            patientRole.setEmail(email);
            patientRole.setPhone(Integer.parseInt(phone));
            patientRole.setStreetAddress(address);
            patientRole.setZipcode(Integer.parseInt(zipcode));
            account.setRole(new PatientRole());
            hospitalEnterprise.findPatientOrganization().getUserAccountDirectory().getUserAccountList().add(account);
            JOptionPane.showMessageDialog(null, "Success!");
            container.remove(this);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);
        }else
            JOptionPane.showMessageDialog(null, "The data with * has not been input!");
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void userNameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameTextFocusLost
        // TODO add your handling code here:
        String username = userNameText.getText();
        if(username!=null){
        HospitalEnterprise hospitalEnterprise = (HospitalEnterprise)jComboBox1.getSelectedItem();
        if(hospitalEnterprise!= null){
            PatientOrganization patientOrganization =(PatientOrganization) hospitalEnterprise.findPatientOrganization();
            if(patientOrganization!=null){
                for(UserAccount userAccount:patientOrganization.getUserAccountDirectory().getUserAccountList()){
                    if(userAccount.getUsername().equals(username)){
                        checkjTable.setText("This username already exists!");
                        checkjTable.setForeground(Color.red);
                        return;
                    }
                        
                }
            }
        }
                        checkjTable.setText("This username can be used!");
                        checkjTable.setForeground(Color.green);
        }
        else{
        checkjTable.setText("Checking...");
         checkjTable.setForeground(Color.black);    
        }
        
    }//GEN-LAST:event_userNameTextFocusLost

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

class JAVAFileFilter extends FileFilter {
    String ext;

    public JAVAFileFilter(String ext) {
        this.ext = ext;
    }

    /* 在accept()方法中,当程序所抓到的是一个目录而不是文件时,我们返回true值,表示将此目录显示出来. */
    public boolean accept(File file) {
        if (file.isDirectory()) {
            return true;
        }
        String fileName = file.getName();
        int index = fileName.lastIndexOf('.');
        if (index > 0 && index < fileName.length() - 1) {
            // 表示文件名称不为".xxx"现"xxx."之类型
            String extension = fileName.substring(index + 1).toLowerCase();
            // 若所抓到的文件扩展名等于我们所设置要显示的扩展名(即变量ext值),则返回true,表示将此文件显示出来,否则返回
            // true.
            if (extension.equals(ext))
                return true;
        }
        return false;
    }

    // 实现getDescription()方法,返回描述文件的说明字符串!!!
    public String getDescription() {
        if (ext.equals("png"))
            return "图片(*.png)";
        if (ext.equals("jpg"))
            return "图片(*.jpg)";
        return "";
    }
}
public void copyFolder(String oldPath, String newPath,String nameString) { 
try { 
int bytesum = 0; 
int byteread = 0; 
File oldfile = new File(oldPath); 
if (oldfile.exists()) { //文件存在时 
InputStream inStream = new FileInputStream(oldPath); //读入原文件 
 
FileOutputStream fs = new FileOutputStream(new File(newPath+nameString)); 
byte[] buffer = new byte[1444]; 
int length; 
while ( (byteread = inStream.read(buffer)) != -1) { 
bytesum += byteread; //字节数 文件大小 
//System.out.println(bytesum); 
fs.write(buffer, 0, byteread); 
} 
inStream.close(); 
} 
} 
catch (Exception e) { 
System.out.println("复制单个文件操作出错"); 
e.printStackTrace(); 

} 

} 
//public void copyFolder(String oldPath, String newPath) {
//        
//        try {
//            File mFile = new File(newPath);
//            if(!mFile .exists()){
//                (new File(newPath)).mkdirs(); // 如果文件夹不存在 则建立新文件夹
//            }
//            File a = new File(oldPath);
//            String[] file = a.list();
//            File temp = null;
//            for (int i = 0; i < file.length; i++) {
//                if (oldPath.endsWith(File.separator)) {
//                    temp = new File(oldPath + file[i]);
//                } else {
//                    temp = new File(oldPath + File.separator + file[i]);
//                }
//
//                if (temp.isFile()) {
//                    String fileName = newPath + "/" + (temp.getName()).toString();
//                    File testFile = new File(fileName);
//                    if (!testFile.exists()) {
//                        FileInputStream input = new FileInputStream(temp);
//                        FileOutputStream output = new FileOutputStream(fileName);
//                        byte[] b = new byte[1024 * 5];
//                        int len;
//                        while ((len = input.read(b)) != -1) {
//                            output.write(b, 0, len);
//                        }
//                        output.flush();
//                        output.close();
//                        input.close();
//                        num++;
//                    }
//                }
//                if (temp.isDirectory()) {// 如果是子文件夹
//                    copyFolder(oldPath + "/" + file[i], newPath + "/" + file[i]);
//                }
//            }
//        } catch (Exception e) {
//            System.out.println("复制整个文件夹内容操作出错");
//            e.printStackTrace();
//
//        }
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel checkjTable;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JTextField emailText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField passwordText;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JTextField userNameText;
    private javax.swing.JTextField zipcodeTextField;
    // End of variables declaration//GEN-END:variables
}
